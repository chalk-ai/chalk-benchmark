syntax = "proto3";

package chalk.common.v1;

import "chalk/common/v1/chalk_error.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

/* Requests */

message OnlineQueryRequest {
  map<string, google.protobuf.Value> inputs = 1;
  repeated OutputExpr outputs = 2;
  optional google.protobuf.Timestamp now = 3;
  map<string, string> staleness = 4;
  OnlineQueryContext context = 5;
  OnlineQueryResponseOptions response_options = 6;
}

message OnlineQueryBulkRequest {
  bytes inputs_feather = 1;
  repeated OutputExpr outputs = 2;
  repeated google.protobuf.Timestamp now = 3;
  map<string, string> staleness = 4;
  OnlineQueryContext context = 5;
  OnlineQueryResponseOptions response_options = 6;
  FeatherBodyType body_type = 7;
}

message GenericSingleQuery {
  oneof query {
    OnlineQueryRequest single_request = 1;
    OnlineQueryBulkRequest bulk_request = 2;
  }
}

message OnlineQueryMultiRequest {
  repeated GenericSingleQuery queries = 1;
}

enum FeatherBodyType {
  FEATHER_BODY_TYPE_UNSPECIFIED = 0;
  FEATHER_BODY_TYPE_TABLE = 1;
  FEATHER_BODY_TYPE_RECORD_BATCHES = 2;
}

// Represent an online query output. Currently these are just single feature FQNs.
// In the future these could be expressions like `User.card.transactions[_.amount < 100]`
message OutputExpr {
  oneof expr {
    string feature_fqn = 1;
  }
}

// Roughly speaking data in here should affect the query hash key / the query plan
message OnlineQueryContext {
  string environment = 1;
  repeated string tags = 2;
  repeated string required_resolver_tags = 3;
  optional string deployment_id = 4;
  optional string branch_id = 5;
  optional string correlation_id = 6;
  optional string query_name = 7;
  optional string query_name_version = 8;
  // Arbitrary flags for the query such as store_plan_stages
  // If a flag because consistently used it should be moved into an actual field.
  map<string, google.protobuf.Value> options = 9;
}

// Options re: how we construct the response, shouldn't affect the query hash
message OnlineQueryResponseOptions {
  bool include_meta = 1;
  ExplainOptions explain = 2;
  FeatureEncodingOptions encoding_options = 3;
  // Customer-provided metadata that gets returned in the response
  map<string, string> metadata = 4;
}

message ExplainOptions {}

message FeatureEncodingOptions {
  bool encode_structs_as_objects = 1;
}

/* Responses */

message OnlineQueryResponse {
  OnlineQueryResult data = 1;
  repeated ChalkError errors = 2;
  OnlineQueryMetadata response_meta = 3;
}
message OnlineQueryBulkResponse {
  bytes scalars_data = 1;
  map<string, bytes> groups_data = 2;
  repeated ChalkError errors = 3;
  OnlineQueryMetadata response_meta = 4;
}

message GenericSingleResponse {
  oneof query {
    OnlineQueryResponse single_response = 1;
    OnlineQueryBulkResponse bulk_response = 2;
  }
}

message OnlineQueryMultiResponse {
  repeated GenericSingleResponse responses = 1;
  // Internal errors not tied to a specific request. Most errors should be stored in the individual response objects.
  repeated ChalkError errors = 2;
}

message OnlineQueryResult {
  repeated FeatureResult results = 1;
}

message FeatureResult {
  string field = 1;
  google.protobuf.Value pkey = 6;
  google.protobuf.Value value = 2;
  optional ChalkError error = 3;
  optional google.protobuf.Timestamp ts = 4;
  optional FeatureMeta meta = 5;
}
message FeatureMeta {
  string chosen_resolver_fqn = 1;
  bool cache_hit = 2;
  string primitive_type = 3;
  int64 version = 4;
}

message OnlineQueryMetadata {
  google.protobuf.Duration execution_duration = 1;
  string deployment_id = 2;
  string environment_id = 3;
  string environment_name = 4;
  string query_id = 5;
  google.protobuf.Timestamp query_timestamp = 6;
  string query_hash = 7;
  QueryExplainInfo explain_output = 8;
  // Same customer-provided metadata that was provided in the request.
  map<string, string> metadata = 9;
}

message QueryExplainInfo {
  // Unstructured string representation of the plan
  optional string plan_string = 1;
}

// UPLOAD FEATURES
message UploadFeaturesBulkRequest {
  bytes inputs_feather = 1;
  repeated google.protobuf.Timestamp now = 3;
  FeatherBodyType body_type = 7;
}

message UploadFeaturesBulkResponse {
  repeated ChalkError errors = 1;
}
